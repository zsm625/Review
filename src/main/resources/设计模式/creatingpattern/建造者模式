4、建造者模式
4.1 模式定义：又称生成器模式
    将一个复杂对象的构建与表示分离，使得同样的构建过程可以创建不同的表示
    建造者模式是一步步创建一个复杂的对象，它允许用户只通过指定复杂对象的
    类型和内容就可以构建它们，用户不需要知道内部的具体构建细节

4.2 模式结构：
    建造者模式包含以下角色：
    1、Builder：抽象创建者
    2、ConcreteBuilder：具体建造者
    3、Director：指挥者
    4、Product：产品角色

4.3 模式分析：
    抽象建造者类中定义了产品的创建方法和返回方法；
    建造者模式的结构中还引入了一个指挥类
    Director，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责
    控制产品的生成过程。

4.4 实例：KFC套餐
    建造者模式可以用来描述KFC如何创建套餐：套餐是一个复杂对象，它一般包含主食（如汉堡
    鸡肉卷等）和饮料（果汁、可乐）等组成部分，不同的套餐有不同的组成部分，而KFC的服务
    员可以根据顾客的要求，一步步转配这些组成部分，构造一份完整的套餐，然后返回给顾客。

4.5 模式优点：
     1、在建造者模式中，客户端不必知道产品内部组成的细节，将产品本身与产品的创建过程解耦，
     使得相同的创建过程可以创建不同的产品对象；
     2、每一个具体建造者都相对独立，而与其他的具体建造者无关，因此可以很方便的替换具体建造者
     3、可以更加精细的控制产品的创建过程。
     4、增加新的具体建造者无须修改原有类库的代码，指挥者类针对抽象建造者类编程，系统扩展方便，
     符合”开闭原则“。

4.6 模式缺点：
    1、建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品直接差异性很大，
    就不适合使用建造者模式，因此其使用范围受到一定的限制。
    2、如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系
    统变得很庞大。