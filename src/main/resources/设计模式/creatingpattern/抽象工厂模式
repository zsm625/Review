3、抽象工厂模式（Abstract FactoryPattern）
3.1 模式定义：
   抽象工厂模式提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体
   的类。抽象工厂模式又称Kit模式。

3.2 模式结构
    抽象工厂模式包含如下角色：
    1、AbstractFactory：抽象工厂
    2、ConcreteFactory：具体工厂
    3、AbstractProduct：抽象产品
    4、Product：具体产品
3.3 模式优点：
    当一个产品族中多个对象被设计成一起工作时，它能够保证客户端始终只使用同一个
    产品族中的对象，这对一些需要根据当前环境来决定其行为的软件系统来说，是一种
    非常实用的设计模式；
    增加新的具体工厂和产品族很方便，无需修改已有系统，符合”开闭原则“；

3.4 模式缺点：
    1、在添加新的产品对象时，难以扩展抽象工厂来生产新种类的产品，这是因为在抽象
    工厂角色中规定了所有可能比创建的产品集合，要支持新种类的产品就意味着要对
    抽象工厂角色及其所有子类的修改，十分不方便
    2、开闭原则的倾斜性，增加新的工厂和产品族容易，增加新的产品等级结构麻烦

3.5 模式应用：
    在很多软件系统中需要更换界面主题，要求界面中的按钮、文本框，背景色等一起
    发生变化时，可以使用抽象工厂模式来进行设计；如Java中的swing桌面系统编程

