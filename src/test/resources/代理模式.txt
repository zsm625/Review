代理模式：
代理是一种模式，提供间接对目标对象访问的方式，即通过代理对象访问目标对象；
这样的好处就是：可以在目标对象实现的功能上，增加额外的功能补充，
即扩展目标对象的功能。
很符合开闭原则，在对既有代码不改动的情况下进行功能的扩展
例如：明星与经纪人之间就是被代理和代理的关系。

1、静态代理
在使用静态代理时，被代理对象与代理对象需要一起实现相同的接口或是继承相同父类，
因此要定义一个接口或抽象类

优点：可以做到在不修改目标对象的功能前提下，对目标功能扩展
缺点：代理对象跟目标对象要实现一样的接口，有很多代理类，
类太多，一旦接口增加方法，目标对象和代理对象都需要维护

2、动态代理

动态代理的主要特点是能够在程序运行时JVM才为被代理类生成代理对象。
常说的动态代理也是JDK代理，也是一种接口代理，JDK中生成代理对象的代理类就是Proxy

动态代理对象不需要实现接口，但是目标对象一定要实现接口，否则不能使用动态代理，
这算是这种代理模式的缺陷

3、Cglib代理
之前的静态代理和动态代理模式有个相同点就是要求目标对象实现一个接口，
然而并不是任何对象都会实现一个接口，也存在没有实现任何接口的对象。
